{{- if .Values.riot.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix.fullname" . }}-riot
  labels:
{{ include "matrix.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.riot.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "matrix.name" . }}-riot
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        # re-roll deployment on config change
        checksum/riot-config: {{ include (print $.Template.BasePath "/riot/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "matrix.name" . }}-riot
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.riot.podSecurityContext | nindent 8 }}
      containers:
        - name: "riot"
          image: "{{ .Values.riot.image.repository }}:{{ .Values.riot.image.tag }}"
          imagePullPolicy: {{ .Values.riot.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/riot-web/config.json
              name: riot-config
              subPath: config.json
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.riot.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: riot-config
          configMap:
            name: {{ include "matrix.fullname" . }}-riot-config
{{- end }}
