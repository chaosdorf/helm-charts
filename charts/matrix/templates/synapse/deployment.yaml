apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix.fullname" . }}-synapse
  labels:
{{ include "matrix.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.synapse.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "matrix.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        # re-roll deployment on homeserver.yaml change
        checksum/synapse-config: {{ include (print $.Template.BasePath "/synapse/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "matrix.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.synapse.podSecurityContext | nindent 8 }}
      # generate signing key only on fresh install
      {{- if .Release.IsInstall }}
      initContainers:
        - name: generate-signing-key
          image: "{{ .Values.synapse.image.repository }}:{{ .Values.synapse.image.tag }}"
          imagePullPolicy: {{ .Values.synapse.image.pullPolicy }}
          env:
            - name: SYNAPSE_SERVER_NAME
              value: {{ .Values.matrix.serverName }}
            - name: SYNAPSE_REPORT_STATS
              value: {{ .Values.matrix.telemetry | ternary "yes" "no" | quote }}
          command: ["python"]
          args:
            - "-m"
            - "synapse.app.homeserver"
            - "--config-path"
            - "/data/homeserver.yaml"
            - "--keys-directory"
            - "/data/keys"
            - "--generate-keys"
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: signing-key
              mountPath: /data/keys
      {{- end }} # end if .Release.IsInstall
      containers:
        - name: "synapse"
          image: "{{ .Values.synapse.image.repository }}:{{ .Values.synapse.image.tag }}"
          imagePullPolicy: {{ .Values.synapse.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: synapse-config
              mountPath: /data
            - name: signing-key
              mountPath: /data/keys
            - name: media-store
              mountPath: /data/media_store
            - name: uploads
              mountPath: /data/uploads
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.synapse.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: synapse-config
          configMap:
            name: {{ include "matrix.fullname" . }}-synapse-config
        - name: signing-key
          persistentVolumeClaim:
            claimName: {{ include "matrix.fullname" . }}-signing-key
        - name: media-store
          persistentVolumeClaim:
            claimName: {{ include "matrix.fullname" . }}-media-store
        # Ephemeral in-progress uploads
        - name: uploads
          emptyDir: {}
